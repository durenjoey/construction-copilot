rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null && request.auth.uid != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && 
        (request.auth.uid == userId || request.auth.token.email == userId);
    }

    // Helper function to check if timestamp is valid
    function isValidTimestamp(timestamp) {
      return timestamp is timestamp || 
        (timestamp is string && timestamp.matches('^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.*Z$'));
    }

    // Projects collection
    match /projects/{projectId} {
      // Allow read if user owns the project
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         resource.data.userId == request.auth.token.email);
      
      // Allow create if user is authenticated and sets themselves as owner
      allow create: if isAuthenticated() && 
        (request.resource.data.userId == request.auth.uid || 
         request.resource.data.userId == request.auth.token.email) &&
        isValidTimestamp(request.resource.data.createdAt);
      
      // Allow update/delete if user owns the project
      allow update, delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         resource.data.userId == request.auth.token.email);

      // Daily Reports subcollection
      match /dailyReports/{reportId} {
        // Allow read if user owns the parent project
        allow read: if isAuthenticated() && exists(/databases/$(database)/documents/projects/$(projectId)) &&
          get(/databases/$(database)/documents/projects/$(projectId)).data.userId == request.auth.uid;
        
        // Allow create if user owns the parent project
        allow create: if isAuthenticated() && exists(/databases/$(database)/documents/projects/$(projectId)) &&
          get(/databases/$(database)/documents/projects/$(projectId)).data.userId == request.auth.uid &&
          isValidTimestamp(request.resource.data.date);
        
        // Allow update/delete if user owns the parent project
        allow update, delete: if isAuthenticated() && exists(/databases/$(database)/documents/projects/$(projectId)) &&
          get(/databases/$(database)/documents/projects/$(projectId)).data.userId == request.auth.uid;
      }
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
